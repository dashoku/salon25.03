{"ast":null,"code":"import { $authHost, $host } from './index';\n\n// Category\nexport const createCategory = async category => {\n  const {\n    data\n  } = await $authHost.post('api/category', category);\n  return data;\n};\nexport const fetchCategories = async () => {\n  const {\n    data\n  } = await $host.get('api/category');\n  return data;\n};\nexport const updateCategory = async (categoryId, categoryData) => {\n  const {\n    data\n  } = await $authHost.put(`api/category/${categoryId}`, categoryData);\n  return data;\n};\nexport const deleteCategory = async categoryId => {\n  try {\n    const response = await $authHost.delete(`api/category/${categoryId}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Запрос отправлен, сервер ответил с ошибкой статуса\n      console.error('Ошибка при удалении категории:', error.response.data);\n      throw new Error(`Помилка при видаленні категорії: ${error.response.data.message}`);\n    } else if (error.request) {\n      // Запрос отправлен, но нет ответа\n      console.error('Ошибка при отправке запроса:', error.request);\n      throw new Error('Помилка при видаленні категорії: Немає відповіді від сервера');\n    } else {\n      // Что-то пошло не так при настройке запроса\n      console.error('Ошибка настройки запроса:', error.message);\n      throw new Error('Помилка при видаленні категорії: Щось пішло не так');\n    }\n  }\n};\nexport const getCategoryById = async categoryId => {\n  const {\n    data\n  } = await $host.get(`api/category/${categoryId}`);\n  return data;\n};\n\n// Procedure\nexport const createProcedure = async procedure => {\n  const {\n    data\n  } = await $authHost.post('api/procedure', procedure);\n  return data;\n};\nexport const fetchProcedures = async (categoryId, page, limit = 5) => {\n  const {\n    data\n  } = await $host.get('api/procedure', {\n    params: {\n      categoryId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneProcedure = async id => {\n  const {\n    data\n  } = await $host.get(`api/procedure/${id}`);\n  return data;\n};\nexport const updateProcedure = async (procedureId, procedureData) => {\n  const {\n    data\n  } = await $authHost.put(`api/procedure/${procedureId}`, procedureData);\n  return data;\n};\nexport const deleteProcedure = async procedureId => {\n  try {\n    const response = await $authHost.delete(`api/procedure/${procedureId}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Запрос отправлен, сервер ответил с ошибкой статуса\n      console.error('Ошибка при удалении процедуры:', error.response.data);\n      throw new Error(`Помилка при видаленні процедури: ${error.response.data.message}`);\n    } else if (error.request) {\n      // Запрос отправлен, но нет ответа\n      console.error('Ошибка при отправке запроса:', error.request);\n      throw new Error('Помилка при видаленні процедури: Немає відповіді від сервера');\n    } else {\n      // Что-то пошло не так при настройке запроса\n      console.error('Ошибка настройки запроса:', error.message);\n      throw new Error('Помилка при видаленні процедури: Щось пішло не так');\n    }\n  }\n};\n\n// Discount\nexport const createDiscount = async discount => {\n  const {\n    data\n  } = await $authHost.post('api/discount', discount);\n  return data;\n};\nexport const fetchDiscounts = async () => {\n  const {\n    data\n  } = await $host.get('api/discount');\n  return data;\n};\n\n// Salon\nexport const createSalon = async salon => {\n  try {\n    const {\n      data\n    } = await $authHost.post('api/salon', salon);\n    return data;\n  } catch (error) {\n    console.error('Error creating salon:', error);\n    throw new Error('Failed to create salon. Please try again.');\n  }\n};\nexport const fetchSalons = async () => {\n  try {\n    const {\n      data\n    } = await $host.get('api/salon');\n    return data;\n  } catch (error) {\n    console.error('Error fetching salons:', error);\n    throw new Error('Failed to fetch salons. Please try again.');\n  }\n};\nexport const updateSalon = async (salonId, salonData) => {\n  try {\n    const {\n      data\n    } = await $authHost.put(`api/salon/${salonId}`, salonData);\n    return data;\n  } catch (error) {\n    console.error('Error updating salon:', error);\n    throw new Error('Failed to update salon. Please try again.');\n  }\n};\nexport const deleteSalon = async salonId => {\n  try {\n    const response = await $authHost.delete(`api/salon/${salonId}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('Error deleting salon:', error.response.data);\n      throw new Error(`Failed to delete salon: ${error.response.data.message}`);\n    } else if (error.request) {\n      console.error('Error sending request:', error.request);\n      throw new Error('Failed to delete salon: No response from the server');\n    } else {\n      console.error('Request setup error:', error.message);\n      throw new Error('Failed to delete salon: Something went wrong');\n    }\n  }\n};\n\n// WorkingHours\nexport const createWorkingHours = async workingHours => {\n  const {\n    data\n  } = await $authHost.post('api/working-hours', workingHours);\n  return data;\n};\nexport const fetchWorkingHours = async () => {\n  const {\n    data\n  } = await $host.get('api/working-hours');\n  return data;\n};\n\n// Income\nexport const createIncome = async income => {\n  const {\n    data\n  } = await $authHost.post('api/income', income);\n  return data;\n};\nexport const fetchIncome = async () => {\n  const {\n    data\n  } = await $host.get('api/income');\n  return data;\n};\n\n// Manager\nexport const createManager = async manager => {\n  try {\n    const {\n      data\n    } = await $authHost.post('api/manager', manager);\n    return data;\n  } catch (error) {\n    console.error('Error creating manager:', error);\n    throw new Error('Failed to create manager');\n  }\n};\nexport const fetchManagers = async () => {\n  try {\n    const {\n      data\n    } = await $host.get('api/manager');\n    return data;\n  } catch (error) {\n    console.error('Error fetching managers:', error);\n    throw new Error('Failed to fetch managers');\n  }\n};\nexport const updateManager = async (managerId, managerData) => {\n  try {\n    const {\n      data\n    } = await $authHost.put(`api/manager/${managerId}`, managerData);\n    return data;\n  } catch (error) {\n    console.error('Error updating manager:', error);\n    throw new Error('Failed to update manager');\n  }\n};\nexport const deleteManager = async managerId => {\n  try {\n    const response = await $authHost.delete(`api/manager/${managerId}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('Error deleting manager:', error.response.data);\n      throw new Error(`Failed to delete manager: ${error.response.data.message}`);\n    } else if (error.request) {\n      console.error('Error sending request:', error.request);\n      throw new Error('Failed to delete manager: No response from the server');\n    } else {\n      console.error('Request setup error:', error.message);\n      throw new Error('Failed to delete manager: Something went wrong');\n    }\n  }\n};\n\n// Record\nexport const createRecord = async record => {\n  const {\n    data\n  } = await $authHost.post('api/record', record);\n  return data;\n};\nexport const fetchRecords = async () => {\n  const {\n    data\n  } = await $host.get('api/record');\n  return data;\n};\n\n// Master\nexport const createMaster = async master => {\n  const {\n    data\n  } = await $authHost.post('api/master', master);\n  return data;\n};\nexport const fetchMasters = async () => {\n  const {\n    data\n  } = await $host.get('api/master');\n  return data;\n};\nexport const updateMaster = async (masterId, masterData) => {\n  const {\n    data\n  } = await $authHost.put(`api/master/${masterId}`, masterData);\n  return data;\n};\nexport const deleteMaster = async masterId => {\n  try {\n    const response = await $authHost.delete(`api/master/${masterId}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('Error deleting master:', error.response.data);\n      throw new Error(`Failed to delete master: ${error.response.data.message}`);\n    } else if (error.request) {\n      console.error('Error sending request:', error.request);\n      throw new Error('Failed to delete master: No response from the server');\n    } else {\n      console.error('Request setup error:', error.message);\n      throw new Error('Failed to delete master: Something went wrong');\n    }\n  }\n};\n\n// Expense\nexport const createExpense = async expense => {\n  const {\n    data\n  } = await $authHost.post('api/expense', expense);\n  return data;\n};\nexport const fetchExpenses = async () => {\n  const {\n    data\n  } = await $host.get('api/expense');\n  return data;\n};\n\n// Client\nexport const createClient = async client => {\n  try {\n    const {\n      data\n    } = await $authHost.post('api/client', client);\n    return data;\n  } catch (error) {\n    console.error('Error creating client:', error);\n    throw new Error('Failed to create client');\n  }\n};\nexport const fetchClients = async () => {\n  try {\n    const {\n      data\n    } = await $host.get('api/client');\n    return data;\n  } catch (error) {\n    console.error('Error fetching clients:', error);\n    throw new Error('Failed to fetch clients');\n  }\n};\nexport const updateClient = async (clientId, clientData) => {\n  try {\n    const {\n      data\n    } = await $authHost.put(`api/client/${clientId}`, clientData);\n    return data;\n  } catch (error) {\n    console.error('Error updating client:', error);\n    throw new Error('Failed to update client');\n  }\n};\nexport const deleteClient = async clientId => {\n  try {\n    const response = await $authHost.delete(`api/client/${clientId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting client:', error);\n    throw new Error('Failed to delete client');\n  }\n};\n\n// Review\nexport const createReview = async review => {\n  const {\n    data\n  } = await $authHost.post('api/review', review);\n  return data;\n};\nexport const fetchReviews = async () => {\n  const {\n    data\n  } = await $host.get('api/review');\n  return data;\n};\n\n// Reminder\nexport const createReminder = async reminder => {\n  const {\n    data\n  } = await $authHost.post('api/reminder', reminder);\n  return data;\n};\nexport const fetchReminders = async () => {\n  const {\n    data\n  } = await $host.get('api/reminder');\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createCategory","category","data","post","fetchCategories","get","updateCategory","categoryId","categoryData","put","deleteCategory","response","delete","error","console","Error","message","request","getCategoryById","createProcedure","procedure","fetchProcedures","page","limit","params","fetchOneProcedure","id","updateProcedure","procedureId","procedureData","deleteProcedure","createDiscount","discount","fetchDiscounts","createSalon","salon","fetchSalons","updateSalon","salonId","salonData","deleteSalon","createWorkingHours","workingHours","fetchWorkingHours","createIncome","income","fetchIncome","createManager","manager","fetchManagers","updateManager","managerId","managerData","deleteManager","createRecord","record","fetchRecords","createMaster","master","fetchMasters","updateMaster","masterId","masterData","deleteMaster","createExpense","expense","fetchExpenses","createClient","client","fetchClients","updateClient","clientId","clientData","deleteClient","createReview","review","fetchReviews","createReminder","reminder","fetchReminders"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/http/deviceAPI.js"],"sourcesContent":["import { $authHost, $host } from './index';\n\n// Category\nexport const createCategory = async (category) => {\n    const { data } = await $authHost.post('api/category', category);\n    return data;\n};\n\nexport const fetchCategories = async () => {\n    const { data } = await $host.get('api/category');\n    return data;\n};\n\nexport const updateCategory = async (categoryId, categoryData) => {\n    const { data } = await $authHost.put(`api/category/${categoryId}`, categoryData);\n    return data;\n};\n\nexport const deleteCategory = async (categoryId) => {\n    try {\n        const response = await $authHost.delete(`api/category/${categoryId}`);\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            // Запрос отправлен, сервер ответил с ошибкой статуса\n            console.error('Ошибка при удалении категории:', error.response.data);\n            throw new Error(`Помилка при видаленні категорії: ${error.response.data.message}`);\n        } else if (error.request) {\n            // Запрос отправлен, но нет ответа\n            console.error('Ошибка при отправке запроса:', error.request);\n            throw new Error('Помилка при видаленні категорії: Немає відповіді від сервера');\n        } else {\n            // Что-то пошло не так при настройке запроса\n            console.error('Ошибка настройки запроса:', error.message);\n            throw new Error('Помилка при видаленні категорії: Щось пішло не так');\n        }\n    }\n};\n\n\nexport const getCategoryById = async (categoryId) => {\n    const { data } = await $host.get(`api/category/${categoryId}`);\n    return data;\n};\n\n\n// Procedure\nexport const createProcedure = async (procedure) => {\n    const { data } = await $authHost.post('api/procedure', procedure);\n    return data;\n};\n\nexport const fetchProcedures = async (categoryId, page, limit = 5) => {\n    const { data } = await $host.get('api/procedure', {\n        params: { categoryId, page, limit }\n    });\n    return data;\n};\n\nexport const fetchOneProcedure = async (id) => {\n    const { data } = await $host.get(`api/procedure/${id}`);\n    return data;\n};\n\nexport const updateProcedure = async (procedureId, procedureData) => {\n    const { data } = await $authHost.put(`api/procedure/${procedureId}`, procedureData);\n    return data;\n};\n\nexport const deleteProcedure = async (procedureId) => {\n    try {\n        const response = await $authHost.delete(`api/procedure/${procedureId}`);\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            // Запрос отправлен, сервер ответил с ошибкой статуса\n            console.error('Ошибка при удалении процедуры:', error.response.data);\n            throw new Error(`Помилка при видаленні процедури: ${error.response.data.message}`);\n        } else if (error.request) {\n            // Запрос отправлен, но нет ответа\n            console.error('Ошибка при отправке запроса:', error.request);\n            throw new Error('Помилка при видаленні процедури: Немає відповіді від сервера');\n        } else {\n            // Что-то пошло не так при настройке запроса\n            console.error('Ошибка настройки запроса:', error.message);\n            throw new Error('Помилка при видаленні процедури: Щось пішло не так');\n        }\n    }\n};\n\n\n// Discount\nexport const createDiscount = async (discount) => {\n    const { data } = await $authHost.post('api/discount', discount);\n    return data;\n};\n\nexport const fetchDiscounts = async () => {\n    const { data } = await $host.get('api/discount');\n    return data;\n};\n\n// Salon\nexport const createSalon = async (salon) => {\n    try {\n        const { data } = await $authHost.post('api/salon', salon);\n        return data;\n    } catch (error) {\n        console.error('Error creating salon:', error);\n        throw new Error('Failed to create salon. Please try again.');\n    }\n};\n\nexport const fetchSalons = async () => {\n    try {\n        const { data } = await $host.get('api/salon');\n        return data;\n    } catch (error) {\n        console.error('Error fetching salons:', error);\n        throw new Error('Failed to fetch salons. Please try again.');\n    }\n};\n\nexport const updateSalon = async (salonId, salonData) => {\n    try {\n        const { data } = await $authHost.put(`api/salon/${salonId}`, salonData);\n        return data;\n    } catch (error) {\n        console.error('Error updating salon:', error);\n        throw new Error('Failed to update salon. Please try again.');\n    }\n};\n\nexport const deleteSalon = async (salonId) => {\n    try {\n        const response = await $authHost.delete(`api/salon/${salonId}`);\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            console.error('Error deleting salon:', error.response.data);\n            throw new Error(`Failed to delete salon: ${error.response.data.message}`);\n        } else if (error.request) {\n            console.error('Error sending request:', error.request);\n            throw new Error('Failed to delete salon: No response from the server');\n        } else {\n            console.error('Request setup error:', error.message);\n            throw new Error('Failed to delete salon: Something went wrong');\n        }\n    }\n};\n\n\n// WorkingHours\nexport const createWorkingHours = async (workingHours) => {\n    const { data } = await $authHost.post('api/working-hours', workingHours);\n    return data;\n};\n\nexport const fetchWorkingHours = async () => {\n    const { data } = await $host.get('api/working-hours');\n    return data;\n};\n\n// Income\nexport const createIncome = async (income) => {\n    const { data } = await $authHost.post('api/income', income);\n    return data;\n};\n\nexport const fetchIncome = async () => {\n    const { data } = await $host.get('api/income');\n    return data;\n};\n\n// Manager\nexport const createManager = async (manager) => {\n    try {\n        const { data } = await $authHost.post('api/manager', manager);\n        return data;\n    } catch (error) {\n        console.error('Error creating manager:', error);\n        throw new Error('Failed to create manager');\n    }\n};\n\nexport const fetchManagers = async () => {\n    try {\n        const { data } = await $host.get('api/manager');\n        return data;\n    } catch (error) {\n        console.error('Error fetching managers:', error);\n        throw new Error('Failed to fetch managers');\n    }\n};\n\nexport const updateManager = async (managerId, managerData) => {\n    try {\n        const { data } = await $authHost.put(`api/manager/${managerId}`, managerData);\n        return data;\n    } catch (error) {\n        console.error('Error updating manager:', error);\n        throw new Error('Failed to update manager');\n    }\n};\n\nexport const deleteManager = async (managerId) => {\n    try {\n        const response = await $authHost.delete(`api/manager/${managerId}`);\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            console.error('Error deleting manager:', error.response.data);\n            throw new Error(`Failed to delete manager: ${error.response.data.message}`);\n        } else if (error.request) {\n            console.error('Error sending request:', error.request);\n            throw new Error('Failed to delete manager: No response from the server');\n        } else {\n            console.error('Request setup error:', error.message);\n            throw new Error('Failed to delete manager: Something went wrong');\n        }\n    }\n};\n\n// Record\nexport const createRecord = async (record) => {\n    const { data } = await $authHost.post('api/record', record);\n    return data;\n};\n\nexport const fetchRecords = async () => {\n    const { data } = await $host.get('api/record');\n    return data;\n};\n\n// Master\nexport const createMaster = async (master) => {\n    const { data } = await $authHost.post('api/master', master);\n    return data;\n};\n\nexport const fetchMasters = async () => {\n    const { data } = await $host.get('api/master');\n    return data;\n};\n\nexport const updateMaster = async (masterId, masterData) => {\n    const { data } = await $authHost.put(`api/master/${masterId}`, masterData);\n    return data;\n};\n\nexport const deleteMaster = async (masterId) => {\n    try {\n        const response = await $authHost.delete(`api/master/${masterId}`);\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            console.error('Error deleting master:', error.response.data);\n            throw new Error(`Failed to delete master: ${error.response.data.message}`);\n        } else if (error.request) {\n            console.error('Error sending request:', error.request);\n            throw new Error('Failed to delete master: No response from the server');\n        } else {\n            console.error('Request setup error:', error.message);\n            throw new Error('Failed to delete master: Something went wrong');\n        }\n    }\n};\n\n// Expense\nexport const createExpense = async (expense) => {\n    const { data } = await $authHost.post('api/expense', expense);\n    return data;\n};\n\nexport const fetchExpenses = async () => {\n    const { data } = await $host.get('api/expense');\n    return data;\n};\n\n// Client\nexport const createClient = async (client) => {\n    try {\n        const { data } = await $authHost.post('api/client', client);\n        return data;\n    } catch (error) {\n        console.error('Error creating client:', error);\n        throw new Error('Failed to create client');\n    }\n};\n\nexport const fetchClients = async () => {\n    try {\n        const { data } = await $host.get('api/client');\n        return data;\n    } catch (error) {\n        console.error('Error fetching clients:', error);\n        throw new Error('Failed to fetch clients');\n    }\n};\n\nexport const updateClient = async (clientId, clientData) => {\n    try {\n        const { data } = await $authHost.put(`api/client/${clientId}`, clientData);\n        return data;\n    } catch (error) {\n        console.error('Error updating client:', error);\n        throw new Error('Failed to update client');\n    }\n};\n\nexport const deleteClient = async (clientId) => {\n    try {\n        const response = await $authHost.delete(`api/client/${clientId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error deleting client:', error);\n        throw new Error('Failed to delete client');\n    }\n};\n\n// Review\nexport const createReview = async (review) => {\n    const { data } = await $authHost.post('api/review', review);\n    return data;\n};\n\nexport const fetchReviews = async () => {\n    const { data } = await $host.get('api/review');\n    return data;\n};\n\n// Reminder\nexport const createReminder = async (reminder) => {\n    const { data } = await $authHost.post('api/reminder', reminder);\n    return data;\n};\n\nexport const fetchReminders = async () => {\n    const { data } = await $host.get('api/reminder');\n    return data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}