{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\nimport CategoryList from \"../components/CategoryList\";\nimport { fetchCategories, fetchProcedures } from \"../http/deviceAPI\";\nimport './stylepages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    category\n  } = useContext(Context);\n  useEffect(() => {\n    //fetchTypes().then(data => category.setTypes(data))\n    //fetchBrands().then(data => category.setBrands(data))\n    fetchCategories(null, null, 1, 2).then(data => {\n      category.setCategories(data.rows);\n      category.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    fetchDevices(category.selectedType.id, category.selectedBrand.id, category.page, 2).then(data => {\n      category.setDevices(data.rows);\n      category.setTotalCount(data.count);\n    });\n  }, [category.page, category.selectedType, category.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}, \"8ZpalChLjWHN0CWu5FERv50is+c=\")), \"8ZpalChLjWHN0CWu5FERv50is+c=\");\n_c2 = Shop;\nexport default Shop;\nvar _c, _c2;\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["React","useContext","useEffect","Container","observer","Context","HomePage","AboutUs","CategoryList","fetchCategories","fetchProcedures","jsxDEV","_jsxDEV","Shop","_s","_c","category","then","data","setCategories","rows","setTotalCount","count","fetchDevices","selectedType","id","selectedBrand","page","setDevices","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/pages/Home.js"],"sourcesContent":["\nimport React, {useContext, useEffect} from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\nimport CategoryList from \"../components/CategoryList\";\nimport {fetchCategories, fetchProcedures} from \"../http/deviceAPI\";\nimport './stylepages.css';\n\nconst Shop = observer(() => {\n\n    const {category} = useContext(Context)\n\n    useEffect(() => {\n        //fetchTypes().then(data => category.setTypes(data))\n        //fetchBrands().then(data => category.setBrands(data))\n        fetchCategories(null, null, 1, 2).then(data => {\n            category.setCategories(data.rows)\n            category.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(category.selectedType.id, category.selectedBrand.id, category.page, 2).then(data => {\n            category.setDevices(data.rows)\n            category.setTotalCount(data.count)\n        })\n    }, [category.page, category.selectedType, category.selectedBrand,])\n\n    return (\n        <Container>\n           <HomePage/>\n           <AboutUs/>\n           <CategoryList/>\n        </Container>\n    );\n});\n\nexport default Shop;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAAQC,OAAO,QAAO,UAAU;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAAQC,eAAe,EAAEC,eAAe,QAAO,mBAAmB;AAClE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAAC,EAAA,CAAGV,QAAQ,CAAAW,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAExB,MAAM;IAACE;EAAQ,CAAC,GAAGf,UAAU,CAACI,OAAO,CAAC;EAEtCH,SAAS,CAAC,MAAM;IACZ;IACA;IACAO,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAACQ,IAAI,CAACC,IAAI,IAAI;MAC3CF,QAAQ,CAACG,aAAa,CAACD,IAAI,CAACE,IAAI,CAAC;MACjCJ,QAAQ,CAACK,aAAa,CAACH,IAAI,CAACI,KAAK,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACZqB,YAAY,CAACP,QAAQ,CAACQ,YAAY,CAACC,EAAE,EAAET,QAAQ,CAACU,aAAa,CAACD,EAAE,EAAET,QAAQ,CAACW,IAAI,EAAE,CAAC,CAAC,CAACV,IAAI,CAACC,IAAI,IAAI;MAC7FF,QAAQ,CAACY,UAAU,CAACV,IAAI,CAACE,IAAI,CAAC;MAC9BJ,QAAQ,CAACK,aAAa,CAACH,IAAI,CAACI,KAAK,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,QAAQ,CAACW,IAAI,EAAEX,QAAQ,CAACQ,YAAY,EAAER,QAAQ,CAACU,aAAa,CAAE,CAAC;EAEnE,oBACId,OAAA,CAACT,SAAS;IAAA0B,QAAA,gBACPjB,OAAA,CAACN,QAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXrB,OAAA,CAACL,OAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACVrB,OAAA,CAACJ,YAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEpB,CAAC,kCAAC;AAACC,GAAA,GA3BGrB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAE,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}