{"ast":null,"code":"// In UserStore.js\n\nimport { makeAutoObservable } from \"mobx\";\nexport default class UserStore {\n  constructor() {\n    this._isAuth = false;\n    this._user = {\n      name: '',\n      surname: '',\n      phone: '',\n      email: ''\n    };\n    makeAutoObservable(this);\n  }\n  setIsAuth(bool) {\n    this._isAuth = bool;\n  }\n  setUser(user) {\n    this._user = user;\n  }\n  setUserProfile(userData) {\n    this._user = userData;\n  }\n  async loadProfile() {\n    try {\n      const response = await fetch('/api/profile', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки профиля');\n      }\n      const userData = await response.json();\n      this.setUser(userData);\n    } catch (error) {\n      console.error('Ошибка загрузки профиля:', error.message);\n    }\n  }\n  get isAuth() {\n    return this._isAuth;\n  }\n  get user() {\n    return this._user;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","UserStore","constructor","_isAuth","_user","name","surname","phone","email","setIsAuth","bool","setUser","user","setUserProfile","userData","loadProfile","response","fetch","method","headers","localStorage","getItem","ok","Error","json","error","console","message","isAuth"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/store/UserStore.js"],"sourcesContent":["// In UserStore.js\n\nimport { makeAutoObservable } from \"mobx\";\n\nexport default class UserStore {\n    constructor() {\n        this._isAuth = false;\n        this._user = {\n            name: '',\n            surname: '',\n            phone: '',\n            email: ''\n        };\n        makeAutoObservable(this);\n    }\n\n    setIsAuth(bool) {\n        this._isAuth = bool;\n    }\n\n    setUser(user) {\n        this._user = user;\n    }\n\n    setUserProfile(userData) {\n        this._user = userData;\n    }\n\n    async loadProfile() {\n        try {\n            const response = await fetch('/api/profile', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            if (!response.ok) {\n                throw new Error('Ошибка загрузки профиля');\n            }\n            const userData = await response.json();\n            this.setUser(userData);\n        } catch (error) {\n            console.error('Ошибка загрузки профиля:', error.message);\n        }\n    }\n\n    get isAuth() {\n        return this._isAuth;\n    }\n\n    get user() {\n        return this._user;\n    }\n}\n"],"mappings":"AAAA;;AAEA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,eAAe,MAAMC,SAAS,CAAC;EAC3BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACX,CAAC;IACDR,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAS,SAASA,CAACC,IAAI,EAAE;IACZ,IAAI,CAACP,OAAO,GAAGO,IAAI;EACvB;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACR,KAAK,GAAGQ,IAAI;EACrB;EAEAC,cAAcA,CAACC,QAAQ,EAAE;IACrB,IAAI,CAACV,KAAK,GAAGU,QAAQ;EACzB;EAEA,MAAMC,WAAWA,CAAA,EAAG;IAChB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QACzCC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAC7D;MACJ,CAAC,CAAC;MACF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MACA,MAAMT,QAAQ,GAAG,MAAME,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACtC,IAAI,CAACb,OAAO,CAACG,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC5D;EACJ;EAEA,IAAIC,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACzB,OAAO;EACvB;EAEA,IAAIS,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACR,KAAK;EACrB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}