{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\pages\\\\Home.js\";\nimport { Container } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\nimport CategoryList from \"../components/CategoryList\";\n//import {fetchCategories, fetchProcedures} from \"../http/deviceAPI\";\nimport './stylepages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = observer(_c = () => {\n  /* const { device } = useContext(Context);\n    useEffect(() => {\n       // Fetch categories and set them in device store\n       fetchCategories().then(data => device.setCategories(data));\n       \n       // Fetch procedures and set them in device store\n       fetchProcedures(null, 1, 2).then(data => {\n           device.setProcedures(data.rows);\n           device.setTotalProcedureCount(data.count);\n       });\n   }, [device]);\n    useEffect(() => {\n       // Fetch procedures based on selected category, type, brand, and page\n       fetchProcedures(device.selectedCategory.id, device.page, 2).then(data => {\n           device.setProcedures(data.rows);\n           device.setTotalProcedureCount(data.count);\n       });\n   }, [device.page, device.selectedCategory, device]);\n  */\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Home;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home$observer\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["Container","observer","HomePage","AboutUs","CategoryList","jsxDEV","_jsxDEV","Home","_c","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/pages/Home.js"],"sourcesContent":["\nimport { Container } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\n\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\nimport CategoryList from \"../components/CategoryList\";\n//import {fetchCategories, fetchProcedures} from \"../http/deviceAPI\";\nimport './stylepages.css';\n\nconst Home = observer(() => {\n   /* const { device } = useContext(Context);\n\n    useEffect(() => {\n        // Fetch categories and set them in device store\n        fetchCategories().then(data => device.setCategories(data));\n        \n        // Fetch procedures and set them in device store\n        fetchProcedures(null, 1, 2).then(data => {\n            device.setProcedures(data.rows);\n            device.setTotalProcedureCount(data.count);\n        });\n    }, [device]);\n\n    useEffect(() => {\n        // Fetch procedures based on selected category, type, brand, and page\n        fetchProcedures(device.selectedCategory.id, device.page, 2).then(data => {\n            device.setProcedures(data.rows);\n            device.setTotalProcedureCount(data.count);\n        });\n    }, [device.page, device.selectedCategory, device]);\n*/\n    return (\n        <Container>\n           <HomePage/>\n           <AboutUs/>\n           <CategoryList/>\n        </Container>\n    );\n});\n\nexport default Home;\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,4BAA4B;AACrD;AACA,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGN,QAAQ,CAAAO,EAAA,GAACA,CAAA,KAAM;EACzB;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGI,oBACIF,OAAA,CAACN,SAAS;IAAAS,QAAA,gBACPH,OAAA,CAACJ,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXP,OAAA,CAACH,OAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACVP,OAAA,CAACF,YAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEpB,CAAC,CAAC;AAACC,GAAA,GA7BGP,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAC,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}