{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\components\\\\modals\\\\procedures\\\\EditProcedure.js\",\n  _s = $RefreshSig$();\n// EditProcedure.js\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button, Form } from 'react-bootstrap';\nimport { updateProcedure } from '../../../http/deviceAPI'; // Импортируем updateProcedure из вашего файла\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProcedure = ({\n  show,\n  onHide,\n  onUpdateProcedures,\n  procedure\n}) => {\n  _s();\n  const [name, setName] = useState(procedure ? procedure.name : '');\n  const [description, setDescription] = useState(procedure ? procedure.description : '');\n  const [price, setPrice] = useState(procedure ? procedure.price : '');\n  const [category, setCategory] = useState(procedure ? procedure.category_id : '');\n  const [error, setError] = useState(null);\n  const handleUpdate = async () => {\n    if (!name || !description || !price || !category) {\n      setError('Будь ласка, заповніть усі поля');\n      return;\n    }\n    const updatedProcedure = {\n      ...procedure,\n      name: name,\n      description: description,\n      price: price,\n      category_id: category\n    };\n    try {\n      await updateProcedure(procedure.procedure_id, updatedProcedure);\n      onUpdateProcedures(); // Обновление списка процедур\n      onHide();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u0442\\u0438 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0434\\u0443\\u0440\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formProcedureName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043D\\u0430\\u0437\\u0432\\u0443 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0434\\u0443\\u0440\\u0438\",\n            value: name || procedure && procedure.name || '',\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formProcedureDescription\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041E\\u043F\\u0438\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043E\\u043F\\u0438\\u0441 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0434\\u0443\\u0440\\u0438\",\n            value: description || procedure && procedure.description || '',\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formProcedurePrice\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412\\u0430\\u0440\\u0442\\u0456\\u0441\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0432\\u0430\\u0440\\u0442\\u0456\\u0441\\u0442\\u044C \\u043F\\u0440\\u043E\\u0446\\u0435\\u0434\\u0443\\u0440\\u0438\",\n            value: price || procedure && procedure.price || '',\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formProcedureCategory\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: category || procedure && procedure.category_id || '',\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onHide,\n        children: \"\\u0421\\u043A\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleUpdate,\n        children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(EditProcedure, \"JZGrdOws7Q9DXVc4g9QyDizIhzw=\");\n_c = EditProcedure;\nexport default EditProcedure;\nvar _c;\n$RefreshReg$(_c, \"EditProcedure\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","updateProcedure","jsxDEV","_jsxDEV","EditProcedure","show","onHide","onUpdateProcedures","procedure","_s","name","setName","description","setDescription","price","setPrice","category","setCategory","category_id","error","setError","handleUpdate","updatedProcedure","procedure_id","message","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","as","style","color","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/components/modals/procedures/EditProcedure.js"],"sourcesContent":["// EditProcedure.js\r\nimport React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { updateProcedure } from '../../../http/deviceAPI'; // Импортируем updateProcedure из вашего файла\r\n\r\nconst EditProcedure = ({ show, onHide, onUpdateProcedures, procedure }) => {\r\n    const [name, setName] = useState(procedure ? procedure.name : '');\r\n    const [description, setDescription] = useState(procedure ? procedure.description : '');\r\n    const [price, setPrice] = useState(procedure ? procedure.price : '');\r\n    const [category, setCategory] = useState(procedure ? procedure.category_id : '');\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleUpdate = async () => {\r\n        if (!name || !description || !price || !category) {\r\n            setError('Будь ласка, заповніть усі поля');\r\n            return;\r\n        }\r\n\r\n        const updatedProcedure = {\r\n            ...procedure,\r\n            name: name,\r\n            description: description,\r\n            price: price,\r\n            category_id: category\r\n        };\r\n\r\n        try {\r\n            await updateProcedure(procedure.procedure_id, updatedProcedure);\r\n            onUpdateProcedures(); // Обновление списка процедур\r\n            onHide();\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={onHide} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Редагувати процедуру</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formProcedureName\">\r\n                        <Form.Label>Назва</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Введіть назву процедури\"\r\n                            value={name || (procedure && procedure.name) || ''}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formProcedureDescription\">\r\n                        <Form.Label>Опис</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Введіть опис процедури\"\r\n                            value={description || (procedure && procedure.description) || ''}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formProcedurePrice\">\r\n                        <Form.Label>Вартість</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Введіть вартість процедури\"\r\n                            value={price || (procedure && procedure.price) || ''}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formProcedureCategory\">\r\n                        <Form.Label>Категорія</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            value={category || (procedure && procedure.category_id) || ''}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                            {/* Здесь нужно добавить опции для выбора категории */}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onHide}>\r\n                    Скасувати\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleUpdate}>\r\n                    Зберегти\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditProcedure;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}