{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\components\\\\CategoryList.js\",\n  _s = $RefreshSig$();\n// CategoryList.js\nimport React, { useState, useEffect } from 'react';\nimport CategoryItem from './CategoryItem';\nimport './stylecomponents.css';\nimport { fetchCategories } from '../http/deviceAPI'; // Предположим, что у вас есть функция для получения списка категорий\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchAllCategories = async () => {\n      try {\n        const categoriesData = await fetchCategories();\n        setCategories(categoriesData);\n      } catch (error) {\n        console.error('Ошибка загрузки категорий:', error);\n      }\n    };\n    fetchAllCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title-p1\",\n      children: \" \\u041F\\u0420\\u041E \\u041D\\u0410\\u0421\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(CategoryItem, {\n      category: category\n    }, category.category_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryList, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useState","useEffect","CategoryItem","fetchCategories","jsxDEV","_jsxDEV","CategoryList","_s","categories","setCategories","fetchAllCategories","categoriesData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","category_id","_c","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/components/CategoryList.js"],"sourcesContent":["// CategoryList.js\nimport React, { useState, useEffect } from 'react';\nimport CategoryItem from './CategoryItem';\nimport './stylecomponents.css';\nimport { fetchCategories } from '../http/deviceAPI'; // Предположим, что у вас есть функция для получения списка категорий\n\nconst CategoryList = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchAllCategories = async () => {\n      try {\n        const categoriesData = await fetchCategories();\n        setCategories(categoriesData);\n      } catch (error) {\n        console.error('Ошибка загрузки категорий:', error);\n      }\n    };\n\n    fetchAllCategories();\n  }, []);\n\n  return (\n    \n    <div className=\"category-list\">\n      <p className=\"title-p1\"> ПРО НАС</p>\n      {categories.map(category => (\n        <CategoryItem key={category.category_id} category={category} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryList;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,uBAAuB;AAC9B,SAASC,eAAe,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,cAAc,GAAG,MAAMR,eAAe,CAAC,CAAC;QAC9CM,aAAa,CAACE,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDF,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEEL,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BV,OAAA;MAAGS,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACnCX,UAAU,CAACY,GAAG,CAACC,QAAQ,iBACtBhB,OAAA,CAACH,YAAY;MAA4BmB,QAAQ,EAAEA;IAAS,GAAzCA,QAAQ,CAACC,WAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAzBID,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}