{"ast":null,"code":"var _jsxFileName = \"D:\\\\3\\u043A\\u0443\\u0440\\u0441\\\\\\u0412\\u0415\\u0411\\\\\\u041F\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\practice\\\\client\\\\src\\\\pages\\\\AdmProcedure.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, Container, Table, Spinner } from \"react-bootstrap\";\nimport CreateProcedure from \"../components/modals/CreateProcedure\";\nimport { fetchProcedures } from \"../http/deviceAPI\";\nimport './stylepages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdmProcedure = _s(observer(_c = _s(() => {\n  _s();\n  const [procedureVisible, setProcedureVisible] = useState(false);\n  const [procedures, setProcedures] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filteredProcedures, setFilteredProcedures] = useState(procedures);\n  const filterProcedures = () => {\n    if (!searchQuery) {\n      setFilteredProcedures(procedures);\n      return;\n    }\n    const filtered = procedures.filter(procedure => procedure.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFilteredProcedures(filtered);\n  };\n  useEffect(() => {\n    async function fetchProceduresData() {\n      try {\n        const response = await fetchProcedures();\n        setProcedures(response);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching procedures:', error);\n        setError('Failed to fetch procedures. Please try again.');\n        setLoading(false);\n      }\n    }\n    fetchProceduresData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Procedure Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: procedures.map(procedure => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: procedure.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: procedure.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this)]\n          }, procedure.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"add-button\",\n        onClick: () => setProcedureVisible(true),\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0434\\u0443\\u0440\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CreateProcedure, {\n        show: procedureVisible,\n        onHide: () => setProcedureVisible(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}, \"fYnXvxLJfsyOhD61GqaYJFdXP8g=\")), \"fYnXvxLJfsyOhD61GqaYJFdXP8g=\");\n_c2 = AdmProcedure;\nexport default AdmProcedure;\nvar _c, _c2;\n$RefreshReg$(_c, \"AdmProcedure$observer\");\n$RefreshReg$(_c2, \"AdmProcedure\");","map":{"version":3,"names":["React","useState","useEffect","observer","Button","Container","Table","Spinner","CreateProcedure","fetchProcedures","jsxDEV","_jsxDEV","Fragment","_Fragment","AdmProcedure","_s","_c","procedureVisible","setProcedureVisible","procedures","setProcedures","loading","setLoading","error","setError","filteredProcedures","setFilteredProcedures","filterProcedures","searchQuery","filtered","filter","procedure","name","toLowerCase","includes","fetchProceduresData","response","console","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","map","id","onClick","show","onHide","_c2","$RefreshReg$"],"sources":["D:/3курс/ВЕБ/Пактика/practice/client/src/pages/AdmProcedure.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, Container, Table, Spinner } from \"react-bootstrap\";\nimport CreateProcedure from \"../components/modals/CreateProcedure\";\nimport { fetchProcedures } from \"../http/deviceAPI\";\nimport './stylepages.css';\n\nconst AdmProcedure = observer(() => {\n    const [procedureVisible, setProcedureVisible] = useState(false);\n    const [procedures, setProcedures] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [filteredProcedures, setFilteredProcedures] = useState(procedures);\n    const filterProcedures = () => {\n        if (!searchQuery) {\n            setFilteredProcedures(procedures);\n            return;\n        }\n        const filtered = procedures.filter(procedure =>\n            procedure.name.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n        setFilteredProcedures(filtered);\n    };\n\n    useEffect(() => {\n        async function fetchProceduresData() {\n            try {\n                const response = await fetchProcedures();\n                setProcedures(response);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching procedures:', error);\n                setError('Failed to fetch procedures. Please try again.');\n                setLoading(false);\n            }\n        }\n\n        fetchProceduresData();\n    }, []);\n\n    return (\n        <Container className=\"d-flex flex-column\">\n            {loading ? (\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            ) : error ? (\n                <p>{error}</p>\n            ) : (\n                <>\n                    <Table striped bordered hover className=\"mt-4\">\n                        <thead>\n                            <tr>\n                                <th>Procedure Name</th>\n                                <th>ID</th>\n                                {/* Add more table headers as needed */}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {procedures.map(procedure => (\n                                <tr key={procedure.id}>\n                                    <td>{procedure.name}</td>\n                                    <td>{procedure.id}</td>\n                                    {/* Add more table data cells as needed */}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n\n                    <Button className=\"add-button\" onClick={() => setProcedureVisible(true)} >\n                        Додати процедуру\n                    </Button>\n                    <CreateProcedure show={procedureVisible} onHide={() => setProcedureVisible(false)} />\n                </>\n            )}\n        </Container>\n    );\n});\n\nexport default AdmProcedure;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}