{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\components\\\\CategoryList.js\";\nimport React from 'react';\nimport CategoryItem from './CategoryItem'; // Предполагается, что компонент CategoryItem находится в отдельном файле\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = ({\n  categories\n}) => {\n  // Функция для разделения массива на подмассивы по четыре элемента\n  const chunkArray = (array, size) => {\n    const chunkedArr = [];\n    for (let i = 0; i < array.length; i += size) {\n      chunkedArr.push(array.slice(i, i + size));\n    }\n    return chunkedArr;\n  };\n\n  // Разделяем массив категорий на подмассивы по четыре элемента каждый\n  const chunkedCategories = chunkArray(categories, 4);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-list\",\n    children: chunkedCategories.map((chunk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-row\",\n      children: chunk.map(category => /*#__PURE__*/_jsxDEV(CategoryItem, {\n        category: category\n      }, category.category_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","CategoryItem","jsxDEV","_jsxDEV","CategoryList","categories","chunkArray","array","size","chunkedArr","i","length","push","slice","chunkedCategories","className","children","map","chunk","index","category","category_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/components/CategoryList.js"],"sourcesContent":["import React from 'react';\nimport CategoryItem from './CategoryItem'; // Предполагается, что компонент CategoryItem находится в отдельном файле\n\nconst CategoryList = ({ categories }) => {\n  // Функция для разделения массива на подмассивы по четыре элемента\n  const chunkArray = (array, size) => {\n    const chunkedArr = [];\n    for (let i = 0; i < array.length; i += size) {\n      chunkedArr.push(array.slice(i, i + size));\n    }\n    return chunkedArr;\n  };\n\n  // Разделяем массив категорий на подмассивы по четыре элемента каждый\n  const chunkedCategories = chunkArray(categories, 4);\n\n  return (\n    <div className=\"category-list\">\n      {/* Мапим подмассивы категорий */}\n      {chunkedCategories.map((chunk, index) => (\n        <div className=\"category-row\" key={index}>\n          {/* Мапим категории внутри каждого подмассива */}\n          {chunk.map(category => (\n            <CategoryItem key={category.category_id} category={category} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EACvC;EACA,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IAClC,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,IAAIF,IAAI,EAAE;MAC3CC,UAAU,CAACG,IAAI,CAACL,KAAK,CAACM,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAAC,CAAC;IAC3C;IACA,OAAOC,UAAU;EACnB,CAAC;;EAED;EACA,MAAMK,iBAAiB,GAAGR,UAAU,CAACD,UAAU,EAAE,CAAC,CAAC;EAEnD,oBACEF,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAC,QAAA,EAE3BF,iBAAiB,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAClChB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,EAE1BE,KAAK,CAACD,GAAG,CAACG,QAAQ,iBACjBjB,OAAA,CAACF,YAAY;QAA4BmB,QAAQ,EAAEA;MAAS,GAAzCA,QAAQ,CAACC,WAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAC/D;IAAC,GAJ+BN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BItB,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}