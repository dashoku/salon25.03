{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { observer } from 'mobx-react-lite';\nimport HomePage from '../components/HomePage';\nimport AboutUs from '../components/AboutUs';\nimport CategoryList from '../components/CategoryList'; // Импортируем компонент CategoryList\nimport { fetchCategories } from '../http/deviceAPI'; // Предположим, что у вас есть функция для получения списка категорий\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = _s(observer(_c = _s(() => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const categoriesData = await fetchCategories(); // Получаем список категорий\n        setCategories(categoriesData); // Устанавливаем полученные категории в состояние\n      } catch (error) {\n        console.error('Ошибка загрузки категорий:', error);\n      }\n    };\n    fetchInitialData(); // Вызываем функцию загрузки данных при монтировании компонента\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\")), \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c2 = Home;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home$observer\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Container","observer","HomePage","AboutUs","CategoryList","fetchCategories","jsxDEV","_jsxDEV","Home","_s","_c","categories","setCategories","fetchInitialData","categoriesData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { observer } from 'mobx-react-lite';\nimport HomePage from '../components/HomePage';\nimport AboutUs from '../components/AboutUs';\nimport CategoryList from '../components/CategoryList'; // Импортируем компонент CategoryList\nimport { fetchCategories } from '../http/deviceAPI'; // Предположим, что у вас есть функция для получения списка категорий\n\nconst Home = observer(() => {\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        const fetchInitialData = async () => {\n            try {\n                const categoriesData = await fetchCategories(); // Получаем список категорий\n                setCategories(categoriesData); // Устанавливаем полученные категории в состояние\n            } catch (error) {\n                console.error('Ошибка загрузки категорий:', error);\n            }\n        };\n\n        fetchInitialData(); // Вызываем функцию загрузки данных при монтировании компонента\n    }, []);\n\n    return (\n        <Container>\n           <HomePage/>\n           <AboutUs/>\n           <CategoryList categories={categories} /> {/* Передаем список категорий в компонент CategoryList */}\n        </Container>\n    );\n});\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,4BAA4B,CAAC,CAAC;AACvD,SAASC,eAAe,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,IAAI,GAAAC,EAAA,CAAGR,QAAQ,CAAAS,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACxB,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,cAAc,GAAG,MAAMT,eAAe,CAAC,CAAC,CAAC,CAAC;QAChDO,aAAa,CAACE,cAAc,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDF,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACP,SAAS;IAAAiB,QAAA,gBACPV,OAAA,CAACL,QAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXd,OAAA,CAACJ,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACVd,OAAA,CAACH,YAAY;MAACO,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEpB,CAAC,kCAAC;AAACC,GAAA,GAvBGd,IAAI;AAyBV,eAAeA,IAAI;AAAC,IAAAE,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}