{"ast":null,"code":"var _jsxFileName = \"D:\\\\3\\u043A\\u0443\\u0440\\u0441\\\\\\u0412\\u0415\\u0411\\\\\\u041F\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\practice\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\nimport { fetchCategories, fetchProcedures } from \"../http/deviceAPI\";\nimport './stylepages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Salon = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    procedure\n  } = useContext(Context);\n  useEffect(() => {\n    fetchCategories().then(data => procedure.setCategories(data));\n    fetchProcedures(null, null, 1, 2).then(data => {\n      procedure.setProcedures(data.rows);\n      procedure.setTotalCount(data.count);\n    });\n  }, [procedure.setCategories, procedure.setProcedures, procedure.setTotalCount]); // Only include the specific procedure methods used\n\n  useEffect(() => {\n    fetchProcedures(procedure.selectedCategory.id, null, procedure.page, 2).then(data => {\n      procedure.setProcedures(data.rows);\n      procedure.setTotalCount(data.count);\n    });\n  }, [procedure.page, procedure.selectedCategory, procedure.setProcedures, procedure.setTotalCount]); // Include specific properties and methods\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}, \"uKOvRvmjZuDUJv4NgixJd1LL+MI=\")), \"uKOvRvmjZuDUJv4NgixJd1LL+MI=\");\n_c2 = Salon;\nexport default Salon;\nvar _c, _c2;\n$RefreshReg$(_c, \"Salon$observer\");\n$RefreshReg$(_c2, \"Salon\");","map":{"version":3,"names":["React","useContext","useEffect","Container","observer","Context","HomePage","AboutUs","fetchCategories","fetchProcedures","jsxDEV","_jsxDEV","Salon","_s","_c","procedure","then","data","setCategories","setProcedures","rows","setTotalCount","count","selectedCategory","id","page","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["D:/3курс/ВЕБ/Пактика/practice/client/src/pages/Home.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\nimport { fetchCategories, fetchProcedures } from \"../http/deviceAPI\";\nimport './stylepages.css';\n\nconst Salon = observer(() => {\n    const { procedure } = useContext(Context);\n\n    useEffect(() => {\n        fetchCategories().then(data => procedure.setCategories(data));\n        fetchProcedures(null, null, 1, 2).then(data => {\n            procedure.setProcedures(data.rows);\n            procedure.setTotalCount(data.count);\n        });\n    }, [procedure.setCategories, procedure.setProcedures, procedure.setTotalCount]); // Only include the specific procedure methods used\n\n    useEffect(() => {\n        fetchProcedures(procedure.selectedCategory.id, null, procedure.page, 2).then(data => {\n            procedure.setProcedures(data.rows);\n            procedure.setTotalCount(data.count);\n        });\n    }, [procedure.page, procedure.selectedCategory, procedure.setProcedures, procedure.setTotalCount]); // Include specific properties and methods\n\n    return (\n        <Container>\n           <HomePage/>\n           <AboutUs/>\n        </Container>\n    );\n});\n\nexport default Salon;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,eAAe,EAAEC,eAAe,QAAQ,mBAAmB;AACpE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAAC,EAAA,CAAGT,QAAQ,CAAAU,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACzB,MAAM;IAAEE;EAAU,CAAC,GAAGd,UAAU,CAACI,OAAO,CAAC;EAEzCH,SAAS,CAAC,MAAM;IACZM,eAAe,CAAC,CAAC,CAACQ,IAAI,CAACC,IAAI,IAAIF,SAAS,CAACG,aAAa,CAACD,IAAI,CAAC,CAAC;IAC7DR,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAACO,IAAI,CAACC,IAAI,IAAI;MAC3CF,SAAS,CAACI,aAAa,CAACF,IAAI,CAACG,IAAI,CAAC;MAClCL,SAAS,CAACM,aAAa,CAACJ,IAAI,CAACK,KAAK,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,CAACP,SAAS,CAACG,aAAa,EAAEH,SAAS,CAACI,aAAa,EAAEJ,SAAS,CAACM,aAAa,CAAC,CAAC,CAAC,CAAC;;EAEjFnB,SAAS,CAAC,MAAM;IACZO,eAAe,CAACM,SAAS,CAACQ,gBAAgB,CAACC,EAAE,EAAE,IAAI,EAAET,SAAS,CAACU,IAAI,EAAE,CAAC,CAAC,CAACT,IAAI,CAACC,IAAI,IAAI;MACjFF,SAAS,CAACI,aAAa,CAACF,IAAI,CAACG,IAAI,CAAC;MAClCL,SAAS,CAACM,aAAa,CAACJ,IAAI,CAACK,KAAK,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,CAACP,SAAS,CAACU,IAAI,EAAEV,SAAS,CAACQ,gBAAgB,EAAER,SAAS,CAACI,aAAa,EAAEJ,SAAS,CAACM,aAAa,CAAC,CAAC,CAAC,CAAC;;EAEpG,oBACIV,OAAA,CAACR,SAAS;IAAAuB,QAAA,gBACPf,OAAA,CAACL,QAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXnB,OAAA,CAACJ,OAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB,CAAC,kCAAC;AAACC,GAAA,GAxBGnB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAE,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}