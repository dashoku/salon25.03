{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\components\\\\CategoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Row } from \"react-bootstrap\";\nimport CategoryItem from \"./CategoryItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    category\n  } = useContext(Context);\n\n  // Проверяем, есть ли данные о категориях перед маппингом\n  if (!category.categories || category.categories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No categories available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this); // Можно заменить на любое другое сообщение или компонент заглушку\n  }\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex\",\n    children: category.categories.map(category => /*#__PURE__*/_jsxDEV(CategoryItem, {\n      category: category\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}, \"2GBpdL90tGfPzc5BdT93PaOXFyU=\")), \"2GBpdL90tGfPzc5BdT93PaOXFyU=\");\n_c2 = CategoryList;\nexport default CategoryList;\nvar _c, _c2;\n$RefreshReg$(_c, \"CategoryList$observer\");\n$RefreshReg$(_c2, \"CategoryList\");","map":{"version":3,"names":["React","useContext","observer","Context","Row","CategoryItem","jsxDEV","_jsxDEV","CategoryList","_s","_c","category","categories","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","_c2","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/components/CategoryList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Row } from \"react-bootstrap\";\nimport CategoryItem from \"./CategoryItem\";\n\nconst CategoryList = observer(() => {\n    const { category } = useContext(Context);\n\n    // Проверяем, есть ли данные о категориях перед маппингом\n    if (!category.categories || category.categories.length === 0) {\n        return <div>No categories available</div>; // Можно заменить на любое другое сообщение или компонент заглушку\n    }\n\n    return (\n        <Row className=\"d-flex\">\n            {category.categories.map(category =>\n                <CategoryItem key={category.id} category={category} />\n            )}\n        </Row>\n    );\n});\n\nexport default CategoryList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAAC,EAAA,CAAGP,QAAQ,CAAAQ,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAChC,MAAM;IAAEE;EAAS,CAAC,GAAGV,UAAU,CAACE,OAAO,CAAC;;EAExC;EACA,IAAI,CAACQ,QAAQ,CAACC,UAAU,IAAID,QAAQ,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1D,oBAAON,OAAA;MAAAO,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAC/C;EAEA,oBACIX,OAAA,CAACH,GAAG;IAACe,SAAS,EAAC,QAAQ;IAAAL,QAAA,EAClBH,QAAQ,CAACC,UAAU,CAACQ,GAAG,CAACT,QAAQ,iBAC7BJ,OAAA,CAACF,YAAY;MAAmBM,QAAQ,EAAEA;IAAS,GAAhCA,QAAQ,CAACU,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC,kCAAC;AAACI,GAAA,GAfGd,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAE,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}