{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dashoku\\\\Documents\\\\GitHub\\\\salon\\\\client\\\\src\\\\components\\\\modals\\\\procedures\\\\CreateProcedure.js\",\n  _s = $RefreshSig$();\n// CreateProcedure.js\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button, Form } from 'react-bootstrap';\nimport { createProcedure, fetchCategories, fetchSalons, fetchMasters } from '../../../http/deviceAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProcedure = ({\n  show,\n  onHide,\n  onUpdateProcedures\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [salons, setSalons] = useState([]);\n  const [masters, setMasters] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedSalon, setSelectedSalon] = useState('');\n  const [selectedMaster, setSelectedMaster] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const categoriesData = await fetchCategories();\n        const salonsData = await fetchSalons();\n        const mastersData = await fetchMasters();\n        setCategories(categoriesData);\n        setSalons(salonsData);\n        setMasters(mastersData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const addProcedure = () => {\n    if (!name || !description || !price || !selectedCategory || !selectedSalon || !selectedMaster) {\n      setError('Please fill out all fields');\n      return;\n    }\n    createProcedure({\n      name,\n      description,\n      price,\n      category_id: selectedCategory,\n      salon_id: selectedSalon,\n      master_id: selectedMaster\n    }).then(data => {\n      onUpdateProcedures();\n      setName('');\n      setDescription('');\n      setPrice('');\n      setSelectedCategory('');\n      setSelectedSalon('');\n      setSelectedMaster('');\n      setError(null);\n      onHide();\n    }).catch(error => {\n      setError('Error adding procedure');\n      console.error('Error adding procedure:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add Procedure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formProcedureSalon\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Salon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: selectedSalon,\n            onChange: e => setSelectedSalon(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select salon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), salons.map(salon => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: salon.salon_id,\n              children: salon.name\n            }, salon.salon_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formProcedureMaster\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: selectedMaster,\n            onChange: e => setSelectedMaster(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select master\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), masters.map(master => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: master.master_id,\n              children: master.name\n            }, master.master_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onHide,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: addProcedure,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProcedure, \"AjZwvME8M9GpxyZgjOSZam7Gt+A=\");\n_c = CreateProcedure;\nexport default CreateProcedure;\nvar _c;\n$RefreshReg$(_c, \"CreateProcedure\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","createProcedure","fetchCategories","fetchSalons","fetchMasters","jsxDEV","_jsxDEV","CreateProcedure","show","onHide","onUpdateProcedures","_s","name","setName","description","setDescription","price","setPrice","categories","setCategories","salons","setSalons","masters","setMasters","selectedCategory","setSelectedCategory","selectedSalon","setSelectedSalon","selectedMaster","setSelectedMaster","error","setError","fetchData","categoriesData","salonsData","mastersData","console","addProcedure","category_id","salon_id","master_id","then","data","catch","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","controlId","Label","Control","as","value","onChange","e","target","map","salon","master","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dashoku/Documents/GitHub/salon/client/src/components/modals/procedures/CreateProcedure.js"],"sourcesContent":["// CreateProcedure.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { createProcedure, fetchCategories, fetchSalons, fetchMasters } from '../../../http/deviceAPI';\r\n\r\nconst CreateProcedure = ({ show, onHide, onUpdateProcedures }) => {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [categories, setCategories] = useState([]);\r\n  const [salons, setSalons] = useState([]);\r\n  const [masters, setMasters] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [selectedSalon, setSelectedSalon] = useState('');\r\n  const [selectedMaster, setSelectedMaster] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const categoriesData = await fetchCategories();\r\n        const salonsData = await fetchSalons();\r\n        const mastersData = await fetchMasters();\r\n        setCategories(categoriesData);\r\n        setSalons(salonsData);\r\n        setMasters(mastersData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addProcedure = () => {\r\n    if (!name || !description || !price || !selectedCategory || !selectedSalon || !selectedMaster) {\r\n      setError('Please fill out all fields');\r\n      return;\r\n    }\r\n\r\n    createProcedure({ name, description, price, category_id: selectedCategory, salon_id: selectedSalon, master_id: selectedMaster })\r\n      .then((data) => {\r\n        onUpdateProcedures(); \r\n        setName('');\r\n        setDescription('');\r\n        setPrice('');\r\n        setSelectedCategory('');\r\n        setSelectedSalon('');\r\n        setSelectedMaster('');\r\n        setError(null);\r\n        onHide();\r\n      })\r\n      .catch(error => {\r\n        setError('Error adding procedure');\r\n        console.error('Error adding procedure:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Procedure</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          {/* Add fields for salon and master selection */}\r\n          <Form.Group controlId=\"formProcedureSalon\">\r\n            <Form.Label>Salon</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={selectedSalon}\r\n              onChange={(e) => setSelectedSalon(e.target.value)}\r\n            >\r\n              <option value=\"\">Select salon</option>\r\n              {salons.map((salon) => (\r\n                <option key={salon.salon_id} value={salon.salon_id}>\r\n                  {salon.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formProcedureMaster\">\r\n            <Form.Label>Master</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={selectedMaster}\r\n              onChange={(e) => setSelectedMaster(e.target.value)}\r\n            >\r\n              <option value=\"\">Select master</option>\r\n              {masters.map((master) => (\r\n                <option key={master.master_id} value={master.master_id}>\r\n                  {master.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={addProcedure}>\r\n          Save\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateProcedure;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}