{"ast":null,"code":"var _jsxFileName = \"D:\\\\3\\u043A\\u0443\\u0440\\u0441\\\\\\u0412\\u0415\\u0411\\\\\\u041F\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\practice\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\n//import TypeBar from \"../components/TypeBar\";\n//import BrandBar from \"../components/BrandBar\";\n//import DeviceList from \"../components/DeviceList\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\n//import Pages from \"../components/Pages\";\nimport './stylepages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  useEffect(() => {\n    // Fetch categories and set them in device store\n    fetchCategories().then(data => device.setCategories(data));\n\n    // Fetch procedures and set them in device store\n    fetchProcedures(null, 1, 2).then(data => {\n      device.setProcedures(data.rows);\n      device.setTotalProcedureCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch procedures based on selected category, type, brand, and page\n    fetchProcedures(device.selectedCategory.id, device.page, 2).then(data => {\n      device.setProcedures(data.rows);\n      device.setTotalProcedureCount(data.count);\n    });\n  }, [device.page, device.selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}, \"XoxCgmGZ2XSGSx3NcNAuULEKBWg=\")), \"XoxCgmGZ2XSGSx3NcNAuULEKBWg=\");\n_c2 = Shop;\nexport default Shop;\nvar _c, _c2;\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["React","useContext","useEffect","Container","Row","Col","Image","Button","observer","Context","HomePage","AboutUs","fetchBrands","fetchDevices","fetchTypes","jsxDEV","_jsxDEV","Shop","_s","_c","device","fetchCategories","then","data","setCategories","fetchProcedures","setProcedures","rows","setTotalProcedureCount","count","selectedCategory","id","page","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["D:/3курс/ВЕБ/Пактика/practice/client/src/pages/Home.js"],"sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport HomePage from \"../components/HomePage\";\nimport AboutUs from \"../components/AboutUs\";\n//import TypeBar from \"../components/TypeBar\";\n//import BrandBar from \"../components/BrandBar\";\n//import DeviceList from \"../components/DeviceList\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\n//import Pages from \"../components/Pages\";\nimport './stylepages.css';\n\nconst Shop = observer(() => {\n    const { device } = useContext(Context);\n\n    useEffect(() => {\n        // Fetch categories and set them in device store\n        fetchCategories().then(data => device.setCategories(data));\n        \n        // Fetch procedures and set them in device store\n        fetchProcedures(null, 1, 2).then(data => {\n            device.setProcedures(data.rows);\n            device.setTotalProcedureCount(data.count);\n        });\n    }, []);\n\n    useEffect(() => {\n        // Fetch procedures based on selected category, type, brand, and page\n        fetchProcedures(device.selectedCategory.id, device.page, 2).then(data => {\n            device.setProcedures(data.rows);\n            device.setTotalProcedureCount(data.count);\n        });\n    }, [device.page, device.selectedCategory]);\n\n    return (\n        <Container>\n           <HomePage/>\n           <AboutUs/>\n        </Container>\n    );\n});\n\nexport default Shop;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AACpE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C;AACA;AACA;AACA,SAAQC,WAAW,EAAEC,YAAY,EAAEC,UAAU,QAAO,mBAAmB;AACvE;AACA,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAAC,EAAA,CAAGV,QAAQ,CAAAW,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACxB,MAAM;IAAEE;EAAO,CAAC,GAAGnB,UAAU,CAACQ,OAAO,CAAC;EAEtCP,SAAS,CAAC,MAAM;IACZ;IACAmB,eAAe,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIH,MAAM,CAACI,aAAa,CAACD,IAAI,CAAC,CAAC;;IAE1D;IACAE,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAACH,IAAI,CAACC,IAAI,IAAI;MACrCH,MAAM,CAACM,aAAa,CAACH,IAAI,CAACI,IAAI,CAAC;MAC/BP,MAAM,CAACQ,sBAAsB,CAACL,IAAI,CAACM,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACZ;IACAuB,eAAe,CAACL,MAAM,CAACU,gBAAgB,CAACC,EAAE,EAAEX,MAAM,CAACY,IAAI,EAAE,CAAC,CAAC,CAACV,IAAI,CAACC,IAAI,IAAI;MACrEH,MAAM,CAACM,aAAa,CAACH,IAAI,CAACI,IAAI,CAAC;MAC/BP,MAAM,CAACQ,sBAAsB,CAACL,IAAI,CAACM,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,CAACT,MAAM,CAACY,IAAI,EAAEZ,MAAM,CAACU,gBAAgB,CAAC,CAAC;EAE1C,oBACId,OAAA,CAACb,SAAS;IAAA8B,QAAA,gBACPjB,OAAA,CAACN,QAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXrB,OAAA,CAACL,OAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB,CAAC,kCAAC;AAACC,GAAA,GA5BGrB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAE,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}